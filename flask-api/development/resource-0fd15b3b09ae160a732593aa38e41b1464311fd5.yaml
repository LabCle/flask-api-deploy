apiVersion: humanitec.io/v1alpha1
kind: Resource
metadata:
  annotations:
    app.humanitec.io/definition-id: default-humanitec-route
    app.humanitec.io/definition-version-id: 1266f49f-dbc8-4998-bfe1-b2d0f2c31fb8
    app.humanitec.io/deployment: 1828fb36e1e989af
    app.humanitec.io/env-type: development
    app.humanitec.io/matching-criteria-id: e1ccf5e735011a72
    app.humanitec.io/resource-class: default
  creationTimestamp: null
  labels:
    app.humanitec.io/app-id: flask-api
    app.humanitec.io/env-id: development
    app.humanitec.io/org-id: humaniteclab
  name: resource-0fd15b3b09ae160a732593aa38e41b1464311fd5
spec:
  configMapName: resource-configmap-0fd15b3b09ae160a732593aa38e41b1464311fd5
  dependsOn:
  - resource-c561a2af773122ad19264b6ea6d58f8c151c68cd
  driver: builtin://template
  driverInputs:
    driver:
      values:
        templates:
          init: |
            serviceName: {{ if regexMatch `modules\.[a-z0-9-]+\.externals` `modules.flask-api-score.externals.route` -}}
              {{- index (splitList "." `modules.flask-api-score.externals.route`) 1 | quote -}}
            {{- else -}}
              {{- fail `A route must be added as a private resource dependency. ID: modules.flask-api-score.externals.route` -}}
            {{- end }}
          outputs: |
            host: {{ .resource.host | quote }}
            path: {{ .resource.path | quote }}
            port: {{ .resource.port }}
            service: {{ .init.serviceName | quote }}
    resource:
      host: ${resources["dns.default#modules.flask-api-score.externals.dns"].outputs.host}
      path: /
      port: 5000
  driverType: humanitec/template
  guresid: 0fd15b3b09ae160a732593aa38e41b1464311fd5
  id: modules.flask-api-score.externals.route
  secretName: resource-secret-0fd15b3b09ae160a732593aa38e41b1464311fd5
  type: route
  workloadPatchName: resource-patch-0fd15b3b09ae160a732593aa38e41b1464311fd5
status: {}
