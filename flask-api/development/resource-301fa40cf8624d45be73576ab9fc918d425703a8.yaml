apiVersion: humanitec.io/v1alpha1
kind: Resource
metadata:
  annotations:
    app.humanitec.io/definition-id: default-humanitec-ingress
    app.humanitec.io/definition-version-id: c7dcce9b-79d4-4236-bf7c-c3643a01dbed
    app.humanitec.io/deployment: 18280ffba6cf521e
    app.humanitec.io/env-type: development
    app.humanitec.io/matching-criteria-id: 9c92a2d495b2258e
    app.humanitec.io/resource-class: default
  creationTimestamp: null
  labels:
    app.humanitec.io/app-id: flask-api
    app.humanitec.io/env-id: development
    app.humanitec.io/org-id: humaniteclab
  name: resource-301fa40cf8624d45be73576ab9fc918d425703a8
spec:
  configMapName: resource-configmap-301fa40cf8624d45be73576ab9fc918d425703a8
  dependsOn:
  - resource-092cbab6e5c7e6ff14fb283879ea6e9bbea245bd
  - resource-0fd15b3b09ae160a732593aa38e41b1464311fd5
  - resource-c561a2af773122ad19264b6ea6d58f8c151c68cd
  driver: builtin://template
  driverInputs:
    driver:
      values:
        automatic_tls_secret_name: ${resources["tls-cert.default#modules.flask-api-score.externals.dns"].outputs.tls_secret_name}
        class: nginx
        host: ${resources["dns.default#modules.flask-api-score.externals.dns"].outputs.host}
        templates:
          init: |
            host: {{ .resource.host | default .driver.values.host | quote }}
            ingressPaths: {{ dig  "rules" "http" (list) .resource | toRawJson }}
            {{/*
              These 3 selectors are guaranteed to return JSON arrays, so don't
              need quoting.
              They will all be empty if there are no routes referencing this
            */}}
            routePaths: ["${resources["route.default#modules.flask-api-score.externals.route"].outputs.path}"]
            routePorts: ["${resources["route.default#modules.flask-api-score.externals.route"].outputs.port}"]
            routeServices: ["${resources["route.default#modules.flask-api-score.externals.route"].outputs.service}"]

            tlsSecretName: {{ .driver.values.tls_secret_name | default .resource.tls_secret_name | default .driver.values.automatic_tls_secret_name | quote }}
          manifests: |
            {{- /*
              Only generate an ingress manifest if there are any routes defined.
            */ -}}
            {{- if or (gt (len .init.ingressPaths) 0) (gt (len .init.routePaths ) 0) -}}
            ingress.yaml:
              location: namespace
              data:
                apiVersion: networking.k8s.io/v1
                kind: Ingress
                metadata:
                  {{- if hasKey .driver.values "annotations" }}
                  annotations:
                    {{- range $k, $v := .driver.values.annotations }}
                    {{ $k | quote }}: {{ $v | quote }}
                    {{- end}}
                  {{- end}}
                  {{- if hasKey .driver.values "labels" }}
                  labels:
                    {{- range $k, $v := .driver.values.labels }}
                    {{ $k | quote }}: {{ $v | quote }}
                    {{- end}}
                  {{- end}}
                  name: {{ .id }}-ingress
                spec:
                  {{- if .driver.values.class }}
                  ingressClassName: {{ .driver.values.class | quote }}
                  {{- end }}
                  rules:
                  - host: {{ .init.host | quote }}
                    http:
                      paths:
                      {{- /*
                        We are guaranteed that one of .init.ingressPaths or .init.routePaths is
                        non-zero in length, so we don't need to deal with the empty condition.
                      */ -}}
                      {{- range $path, $rule := .init.ingressPaths }}
                      - path: {{ ternary "/" $path (eq $path "*") | quote }}
                        pathType: {{ $lcType := lower $rule.type -}}
                          {{- if eq $lcType "implementationspecific" -}}
                            {{- "ImplementationSpecific" -}}
                          {{- else if eq $lcType "exact" -}}
                            {{- "Exact" -}}
                          {{- else -}}
                            {{- "Prefix" -}}
                          {{- end }}
                        backend:
                          service:
                            name: {{ $rule.name | quote }}
                            port:
                              number: {{ $rule.port }}
                      {{- end }}
                      {{- range $index, $path := .init.routePaths }}
                      - path: {{ $path | quote }}
                        {{/*
                          TODO: Check the path to choose exact or prefix
                        */}}
                        pathType: {{ $.driver.values.path_type | default "Prefix" | quote }}
                        backend:
                          service:
                            name: {{ index $.init.routeServices $index  | quote }}
                            port:
                              number: {{ index $.init.routePorts $index }}
                      {{- end }}
                  {{- if not (or .driver.values.no_tls (eq .init.tlsSecretName "")) }}
                  tls:
                  - hosts:
                    - {{ .init.host | quote }}
                    secretName: {{ .init.tlsSecretName | quote }}
                  {{- end }}
            {{- end -}}
          outputs: |
            no_tls: {{ .driver.values.no_tls | default false }}
            id: {{ .id }}-ingress
  driverType: humanitec/template
  guresid: 301fa40cf8624d45be73576ab9fc918d425703a8
  id: modules.flask-api-score.externals.dns
  secretName: resource-secret-301fa40cf8624d45be73576ab9fc918d425703a8
  type: ingress
  workloadPatchName: resource-patch-301fa40cf8624d45be73576ab9fc918d425703a8
status: {}
