apiVersion: humanitec.io/v1alpha1
kind: Resource
metadata:
  annotations:
    app.humanitec.io/definition-id: htc-ref-arch-postgres
    app.humanitec.io/definition-version-id: a6411e4f-aeab-4ea1-9223-ca7b9b94a4ee
    app.humanitec.io/deployment: 182bd7b57ba5164f
    app.humanitec.io/env-type: development
    app.humanitec.io/matching-criteria-id: 90310c1bdf6bfcb8
    app.humanitec.io/resource-class: default
  creationTimestamp: null
  labels:
    app.humanitec.io/app-id: spring-kafka
    app.humanitec.io/env-id: development
    app.humanitec.io/org-id: humaniteclab
  name: resource-7a3a76d6d5e573822db4fc2bdb00757fcfeb5244
spec:
  configMapName: resource-configmap-7a3a76d6d5e573822db4fc2bdb00757fcfeb5244
  dependsOn: []
  driver: builtin://template
  driverInputs:
    driver:
      values:
        templates:
          cookie: |
            port: {{ .init.port }}
            user: {{ .init.user }}
            password: {{ .init.password }}
            database: {{ .init.database }}
          init: |+
            {{- if .cookie}}
            port: {{ .cookie.port }}
            user: {{ .cookie.user }}
            password: {{ .cookie.password }}
            database: {{ .cookie.database }}
            {{- else }}
            port: 5432
            user: {{ randAlpha 8 | lower | quote }}
            password: {{ randAlphaNum 16 | quote }}
            database: {{ randAlpha 8 | lower | quote }}
            {{- end }}
            name: postgres-{{ "modules.spring-kafka-score.externals.db" | replace "." "-" | substr 0 43 }}

          manifests: |
            statefulset.yaml:
              location: namespace
              data:
                apiVersion: apps/v1
                kind: StatefulSet
                metadata:
                  name: {{ .init.name }}
                spec:
                  serviceName: postgres
                  replicas: 1
                  selector:
                    matchLabels:
                      app: {{ .init.name }}
                  template:
                    metadata:
                      labels:
                        app: {{ .init.name }}
                    spec:
                      automountServiceAccountToken: false
                      containers:
                        - name: {{ .init.name }}
                          image: postgres:17-alpine
                          env:
                            - name: POSTGRES_USER
                              value: {{ .init.user | quote }}
                            - name: POSTGRES_PASSWORD
                              valueFrom:
                                secretKeyRef:
                                  name: {{ .init.name }}
                                  key: POSTGRES_PASSWORD
                            - name: POSTGRES_DB
                              value: {{ .init.database | quote }}
                            - name: PGDATA
                              value: /var/lib/postgresql/data/pgdata
                            - name: PGPORT
                              value: {{ .init.port | quote }}
                          ports:
                            - containerPort: {{ .init.port }}
                              name: postgres
                          volumeMounts:
                            - name: {{ .init.name }}
                              mountPath: /var/lib/postgresql/data
                          securityContext:
                            runAsUser: 1000
                            runAsGroup: 1000
                            allowPrivilegeEscalation: false
                            privileged: false
                            capabilities:
                              drop:
                                - ALL
                      securityContext:
                        runAsNonRoot: true
                        fsGroup: 1000
                        seccompProfile:
                          type: RuntimeDefault
                  volumeClaimTemplates:
                    - metadata:
                        name: {{ .init.name }}
                      spec:
                        accessModes:
                          - ReadWriteOnce
                        resources:
                          requests:
                            storage: 1Gi
                        storageClassName: gp2
            service.yaml:
              location: namespace
              data:
                apiVersion: v1
                kind: Service
                metadata:
                  name: {{ .init.name }}
                spec:
                  ports:
                  - port: {{ .init.port }}
                  selector:
                    app: {{ .init.name }}
                  clusterIP: None
            secret.yaml:
              location: namespace
              data:
                apiVersion: v1
                kind: Secret
                metadata:
                  name: {{ .init.name }}
                type: Opaque
                data:
                  POSTGRES_PASSWORD: {{ .init.password | b64enc }}
          outputs: |
            host: {{ .init.name }}
            port: {{ .init.port }}
            name: {{ .init.database }}
          secrets: |
            username: {{ .init.user }}
            password: {{ .init.password }}
  driverType: humanitec/template
  guresid: 7a3a76d6d5e573822db4fc2bdb00757fcfeb5244
  id: modules.spring-kafka-score.externals.db
  secretName: resource-secret-7a3a76d6d5e573822db4fc2bdb00757fcfeb5244
  type: postgres
  workloadPatchName: resource-patch-7a3a76d6d5e573822db4fc2bdb00757fcfeb5244
status: {}
