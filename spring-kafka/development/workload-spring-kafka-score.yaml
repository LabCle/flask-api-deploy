apiVersion: humanitec.io/v1alpha1
kind: Workload
metadata:
  annotations:
    app.humanitec.io/deployment: 182bd7b57ba5164f
  creationTimestamp: null
  labels:
    app.humanitec.io/app-id: spring-kafka
    app.humanitec.io/env-id: development
    app.humanitec.io/org-id: humaniteclab
  name: spring-kafka-score
spec:
  dependsOnResources:
  - resource-7a3a76d6d5e573822db4fc2bdb00757fcfeb5244
  - resource-60ed5fe3191fc3fa6473edfd413a5d2a2fb55c36
  - resource-3bda415792bd16ab6f58ea20771d4ad987b03481
  manifests:
  - apiVersion: v1
    data: {}
    kind: ConfigMap
    metadata:
      labels:
        app.kubernetes.io/instance: spring-kafka-score
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: spring-kafka-score
        helm.sh/chart: default-module-1.17.6
      name: spring-kafka-score-configmap-spring-kafka
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app.kubernetes.io/instance: spring-kafka-score
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: spring-kafka-score
        helm.sh/chart: default-module-1.17.6
      name: spring-kafka-score
    spec:
      minReadySeconds: 5
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/instance: spring-kafka-score
          app.kubernetes.io/name: spring-kafka-score
      strategy:
        rollingUpdate:
          maxSurge: 1
          maxUnavailable: 0
      template:
        metadata:
          annotations:
            checksum/config: 6ba20073d48421829fec70d7b8670f762588d9a63bba2d9c3b95988a5a6cbf88
            humanitec.io/managed-by: Score
            humanitec.io/workload-artefact-name: spring-kafka-score
          labels:
            app.kubernetes.io/instance: spring-kafka-score
            app.kubernetes.io/name: spring-kafka-score
        spec:
          containers:
          - env:
            - name: _MODULES.SPRING_KAFKA_SCORE.EXTERNALS.DB_HOST
              valueFrom:
                configMapKeyRef:
                  key: host
                  name: resource-configmap-7a3a76d6d5e573822db4fc2bdb00757fcfeb5244
            - name: DB_HOST
              value: $(_MODULES.SPRING_KAFKA_SCORE.EXTERNALS.DB_HOST)
            - name: _MODULES.SPRING_KAFKA_SCORE.EXTERNALS.DB_NAME
              valueFrom:
                configMapKeyRef:
                  key: name
                  name: resource-configmap-7a3a76d6d5e573822db4fc2bdb00757fcfeb5244
            - name: DB_NAME
              value: $(_MODULES.SPRING_KAFKA_SCORE.EXTERNALS.DB_NAME)resources
            - name: _MODULES.SPRING_KAFKA_SCORE.EXTERNALS.DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: resource-secret-7a3a76d6d5e573822db4fc2bdb00757fcfeb5244
            - name: DB_PASSWORD
              value: $(_MODULES.SPRING_KAFKA_SCORE.EXTERNALS.DB_PASSWORD)
            - name: _MODULES.SPRING_KAFKA_SCORE.EXTERNALS.DB_PORT
              valueFrom:
                configMapKeyRef:
                  key: port
                  name: resource-configmap-7a3a76d6d5e573822db4fc2bdb00757fcfeb5244
            - name: DB_PORT
              value: $(_MODULES.SPRING_KAFKA_SCORE.EXTERNALS.DB_PORT)
            - name: _MODULES.SPRING_KAFKA_SCORE.EXTERNALS.DB_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: resource-secret-7a3a76d6d5e573822db4fc2bdb00757fcfeb5244
            - name: DB_USERNAME
              value: $(_MODULES.SPRING_KAFKA_SCORE.EXTERNALS.DB_USERNAME)
            envFrom:
            - configMapRef:
                name: spring-kafka-score-configmap-spring-kafka
            image: clecio/spring-kafka:latest
            name: spring-kafka
            resources:
              limits:
                cpu: 250m
                memory: 256Mi
              requests:
                cpu: 25m
                memory: 64Mi
          imagePullSecrets: []
          serviceAccount: ""
          serviceAccountName: ""
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app.kubernetes.io/instance: spring-kafka-score
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: spring-kafka-score
        helm.sh/chart: default-module-1.17.6
      name: spring-kafka-score
    spec:
      ports:
      - name: port-http
        port: 8080
        protocol: TCP
        targetPort: 8080
      selector:
        app.kubernetes.io/instance: spring-kafka-score
        app.kubernetes.io/name: spring-kafka-score
      type: ClusterIP
status: {}
